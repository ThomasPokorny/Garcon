/*
 * This file is generated by jOOQ.
 */
package garcon.generated.garcon;


import garcon.generated.DefaultCatalog;
import garcon.generated.garcon.tables.Category;
import garcon.generated.garcon.tables.Dish;
import garcon.generated.garcon.tables.Table;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Garcon extends SchemaImpl {

    private static final long serialVersionUID = 1156080724;

    /**
     * The reference instance of <code>garcon</code>
     */
    public static final Garcon GARCON = new Garcon();

    /**
     * The table <code>garcon.category</code>.
     */
    public final Category CATEGORY = garcon.generated.garcon.tables.Category.CATEGORY;

    /**
     * The table <code>garcon.dish</code>.
     */
    public final Dish DISH = garcon.generated.garcon.tables.Dish.DISH;

    /**
     * The table <code>garcon.table</code>.
     */
    public final Table TABLE = garcon.generated.garcon.tables.Table.TABLE;

    /**
     * No further instances allowed
     */
    private Garcon() {
        super("garcon", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.CATEGORY_ID_SEQ,
            Sequences.DISH_ID_SEQ,
            Sequences.TABLE_ID_SEQ);
    }

    @Override
    public final List<org.jooq.Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<org.jooq.Table<?>> getTables0() {
        return Arrays.<org.jooq.Table<?>>asList(
            Category.CATEGORY,
            Dish.DISH,
            Table.TABLE);
    }
}
